@baseUrl = http://localhost:19091
@reviewApi = {{baseUrl}}/api/reviews
@internalApi = {{baseUrl}}/api/reviews/app/statistics

### 회원가입
POST {{baseUrl}}/api/users/signup
Content-Type: application/json

{
  "email": "user2@gmail.com",
  "password": "user2",
  "name": "user2",
  "phone": "010-1235-1235",
  "role" : "USER",
  "slackId": "user2@gmail.com"
}

### 로그인 및 AccessToken 저장
POST {{baseUrl}}/api/auth/signin
Content-Type: application/json

{
  "email": "user1@gmail.com",
  "password": "user1"
}
> {% client.global.set("access_token", response.body.accessToken) %}


### [리뷰 생성 테스트 - 일반 리뷰 데이터]
### 리뷰 생성 1
POST {{reviewApi}}
Authorization: {{access_token}}
Content-Type: application/json

{
  "userId": 1,
  "restaurantId": "11111111-aaaa-bbbb-cccc-111111111111",
  "reservationId": "11111111-aaaa-bbbb-cccc-000000000001",
  "content": "정말 맛있게 잘 먹었습니다!",
  "rating": 5
}
> {% client.global.set("reviewId", response.body.data.reviewId) %}

### 리뷰 생성 2
POST {{reviewApi}}
Authorization: {{access_token}}
Content-Type: application/json

{
  "userId": 2,
  "restaurantId": "22222222-aaaa-bbbb-cccc-222222222222",
  "reservationId": "22222222-aaaa-bbbb-cccc-000000000002",
  "content": "보통이에요. 그냥 무난했어요.",
  "rating": 3
}

### 리뷰 생성 3
POST {{reviewApi}}
Authorization: {{access_token}}
Content-Type: application/json

{
  "userId": 1,
  "restaurantId": "33333333-aaaa-bbbb-cccc-333333333333",
  "reservationId": "33333333-aaaa-bbbb-cccc-000000000003",
  "content": "직원들이 친절하고 서비스가 좋았어요.",
  "rating": 4
}

### 리뷰 생성 4
POST {{reviewApi}}
Authorization: {{access_token}}
Content-Type: application/json

{
  "userId": 2,
  "restaurantId": "33333333-aaaa-bbbb-cccc-333333333333",
  "reservationId": "44444444-aaaa-bbbb-cccc-000000000004",
  "content": "양이 적고 맛도 없었어요. 비추합니다.",
  "rating": 2
}

### 리뷰 생성 5
POST {{reviewApi}}
Authorization: {{access_token}}
Content-Type: application/json

{
  "userId": 3,
  "restaurantId": "55555555-aaaa-bbbb-cccc-555555555555",
  "reservationId": "55555555-aaaa-bbbb-cccc-000000000005",
  "content": "특별한 맛은 없었지만 분위기는 좋았어요.",
  "rating": 3
}

### 리뷰 생성 6
POST {{reviewApi}}
Authorization: {{access_token}}
Content-Type: application/json

{
  "userId": 3,
  "restaurantId": "66666666-aaaa-bbbb-cccc-666666666666",
  "reservationId": "66666666-aaaa-bbbb-cccc-000000000006",
  "content": "너무너무 맛있었어요! 꼭 다시 갈게요!",
  "rating": 5
}

### 리뷰 생성 7
POST {{reviewApi}}
Authorization: {{access_token}}
Content-Type: application/json

{
  "userId": 4,
  "restaurantId": "77777777-aaaa-bbbb-cccc-777777777777",
  "reservationId": "77777777-aaaa-bbbb-cccc-000000000007",
  "content": "기대 이하였어요. 리뷰를 보고 갔는데 아쉬웠어요.",
  "rating": 2
}

### 리뷰 생성 8
POST {{reviewApi}}
Authorization: {{access_token}}
Content-Type: application/json

{
  "userId": 4,
  "restaurantId": "88888888-aaaa-bbbb-cccc-888888888888",
  "reservationId": "88888888-aaaa-bbbb-cccc-000000000008",
  "content": "평범했지만 나쁘지 않았어요.",
  "rating": 3
}

### 리뷰 생성 9
POST {{reviewApi}}
Authorization: {{access_token}}
Content-Type: application/json

{
  "userId": 5,
  "restaurantId": "99999999-aaaa-bbbb-cccc-999999999999",
  "reservationId": "99999999-aaaa-bbbb-cccc-000000000009",
  "content": "분위기, 맛, 가격 모두 만족스러웠습니다.",
  "rating": 5
}

### 리뷰 생성 10
POST {{reviewApi}}
Authorization: {{access_token}}
Content-Type: application/json

{
  "userId": 5,
  "restaurantId": "aaaaaaaa-aaaa-bbbb-cccc-aaaaaaaaaaaa",
  "reservationId": "aaaaaaaa-aaaa-bbbb-cccc-000000000010",
  "content": "불친절하고 음식도 늦게 나왔어요.",
  "rating": 1
}

### [리뷰 생성 테스트 - 통계 전용 데이터]
### 통계용 리뷰 생성 1
POST {{reviewApi}}
Authorization: Bearer {{access_token}}
Content-Type: application/json

{
  "userId": 1,
  "restaurantId": "11111111-aaaa-bbbb-cccc-111111111111",
  "reservationId": "11111111-aaaa-bbbb-cccc-100000000001",
  "content": "정말 맛있게 잘 먹었습니다!",
  "rating": 5
}

### 통계용 리뷰 생성 2
POST {{reviewApi}}
Authorization: Bearer {{access_token}}
Content-Type: application/json

{
  "userId": 2,
  "restaurantId": "11111111-aaaa-bbbb-cccc-111111111111",
  "reservationId": "11111111-aaaa-bbbb-cccc-100000000002",
  "content": "무난했어요. 특별하진 않았지만 괜찮았어요.",
  "rating": 3
}

### 통계용 리뷰 생성 3
POST {{reviewApi}}
Authorization: Bearer {{access_token}}
Content-Type: application/json

{
  "userId": 3,
  "restaurantId": "11111111-aaaa-bbbb-cccc-111111111111",
  "reservationId": "11111111-aaaa-bbbb-cccc-100000000003",
  "content": "직원도 친절하고 음식도 훌륭했어요!",
  "rating": 4
}

### 통계용 리뷰 생성 4
POST {{reviewApi}}
Authorization: Bearer {{access_token}}
Content-Type: application/json

{
  "userId": 4,
  "restaurantId": "11111111-aaaa-bbbb-cccc-111111111111",
  "reservationId": "22222222-aaaa-bbbb-cccc-100000000004",
  "content": "보통이에요. 그냥 무난했어요.",
  "rating": 3
}

### 통계용 리뷰 생성 5
POST {{reviewApi}}
Authorization: Bearer {{access_token}}
Content-Type: application/json

{
  "userId": 5,
  "restaurantId": "11111111-aaaa-bbbb-cccc-111111111111",
  "reservationId": "33333333-aaaa-bbbb-cccc-100000000005",
  "content": "서비스가 좋았어요.",
  "rating": 4
}

### 통계용 리뷰 생성 6
POST {{reviewApi}}
Authorization: Bearer {{access_token}}
Content-Type: application/json

{
  "userId": 6,
  "restaurantId": "11111111-aaaa-bbbb-cccc-111111111111",
  "reservationId": "44444444-aaaa-bbbb-cccc-100000000006",
  "content": "양이 적고 맛도 없었어요.",
  "rating": 2
}

### 통계용 리뷰 생성 7
POST {{reviewApi}}
Authorization: Bearer {{access_token}}
Content-Type: application/json

{
  "userId": 7,
  "restaurantId": "11111111-aaaa-bbbb-cccc-111111111111",
  "reservationId": "55555555-aaaa-bbbb-cccc-100000000007",
  "content": "분위기는 좋았어요.",
  "rating": 3
}

### 통계용 리뷰 생성 8
POST {{reviewApi}}
Authorization: Bearer {{access_token}}
Content-Type: application/json

{
  "userId": 8,
  "restaurantId": "11111111-aaaa-bbbb-cccc-111111111111",
  "reservationId": "66666666-aaaa-bbbb-cccc-100000000008",
  "content": "너무너무 맛있었어요!",
  "rating": 5
}

### 통계용 리뷰 생성 9
POST {{reviewApi}}
Authorization: Bearer {{access_token}}
Content-Type: application/json

{
  "userId": 9,
  "restaurantId": "11111111-aaaa-bbbb-cccc-111111111111",
  "reservationId": "77777777-aaaa-bbbb-cccc-100000000009",
  "content": "기대 이하였어요.",
  "rating": 2
}

### 통계용 리뷰 생성 10
POST {{reviewApi}}
Authorization: Bearer {{access_token}}
Content-Type: application/json

{
  "userId": 10,
  "restaurantId": "11111111-aaaa-bbbb-cccc-111111111111",
  "reservationId": "88888888-aaaa-bbbb-cccc-100000000010",
  "content": "그럭저럭 괜찮았어요.",
  "rating": 3
}


### [리뷰 단건 조회]
GET {{reviewApi}}/{{reviewId}}
Authorization: Bearer {{access_token}}
Accept: application/json

### [리뷰 리스트 조회 - by userId]
GET {{reviewApi}}/list?userId=1
Authorization: Bearer {{access_token}}
Accept: application/json

### [리뷰 리스트 조회 - by restaurantId]
GET {{reviewApi}}/list?restaurantId=11111111-aaaa-bbbb-cccc-111111111111
Authorization: Bearer {{access_token}}
Accept: application/json

### [리뷰 리스트 조회 - by userId + restaurantId]
GET {{reviewApi}}/list?userId=1&restaurantId=11111111-aaaa-bbbb-cccc-111111111111
Authorization: Bearer {{access_token}}
Accept: application/json

### [조건 기반 리뷰 검색 - userId + restaurantId + rating]
GET {{reviewApi}}/search?userId=1&restaurantId=11111111-aaaa-bbbb-cccc-111111111111&rating=5
Authorization: Bearer {{access_token}}
Accept: application/json


### [리뷰 삭제 테스트]
DELETE {{reviewApi}}
Authorization: Bearer {{access_token}}
Content-Type: application/json

{
  "reviewId": "{{reviewId}}",
  "userId": 1
}


### [Internal API - 리뷰 통계 조회]
POST {{internalApi}}
Authorization: Bearer {{access_token}}
Content-Type: application/json

{
  "restaurantId": "11111111-aaaa-bbbb-cccc-111111111111"
}